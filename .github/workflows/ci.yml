name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.18.x", "1.19.x"]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Run test
        run: go test -v -race -covermode atomic -coverprofile "/tmp/coverage.txt" ./...

      - name: Send goveralls coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: /tmp/coverage.txt
          flag-name: Go-${{ matrix.go }}
          parallel: true

  check-coverage:
    name: Check coverage
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true

  goreleaser:
    name: Release a new version
    needs: [lint, test]
    runs-on: ubuntu-latest
    environment: GoReleaser
    if: ${{ success() && github.repository == '13k/dm' && startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: "1.19.x"

      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
